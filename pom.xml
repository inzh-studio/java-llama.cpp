<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>de.kherud</groupId>
	<artifactId>llama</artifactId>
	<version>2.3.5</version>
	<packaging>jar</packaging>

	<name>${project.groupId}:${project.artifactId}</name>
	<description>Java Bindings for llama.cpp - A Port of Facebook's LLaMA model in C/C++.</description>
	<url>https://github.com/kherud/java-llama.cpp</url>

	<licenses>
		<license>
			<name>MIT License</name>
			<url>https://www.opensource.org/licenses/mit-license.php</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>Konstantin Herud</name>
			<email>konstantin.herud@gmail.com</email>
			<organizationUrl>https://github.com/kherud</organizationUrl>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:git://github.com/kherud/java-llama.cpp.git</connection>
		<developerConnection>scm:git:ssh://github.com:kherud/java-llama.cpp.git</developerConnection>
		<url>https://github.com/kherud/java-llama.cpp/tree/master</url>
	</scm>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<properties>
		<jna.version>5.13.0</jna.version>
		<junit.version>4.13.1</junit.version>
		<test.plugin.version>3.2.3</test.plugin.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<model.home>${project.basedir}/models</model.home>
		<integration.test.model>mistral-7b-instruct-v0.2.Q2_K.gguf</integration.test.model>
		<integration.test.model.url>https://huggingface.co/TheBloke/Mistral-7B-Instruct-v0.2-GGUF/resolve/main/${integration.test.model}</integration.test.model.url>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jetbrains</groupId>
			<artifactId>annotations</artifactId>
			<version>24.0.1</version>
			<scope>compile</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.11.0</version>
				<configuration>
					<compilerArgs>
						<arg>-h</arg>
						<arg>src/main/cpp</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			<!-- This allows us to execute the examples from the command line -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<classpathScope>test</classpathScope>
				</configuration>
			</plugin>

			<!-- Surefire plugin for unit tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${test.plugin.version}</version>
				<configuration>

				</configuration>
			</plugin>

			<!-- Failsafe plugin for integration tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${test.plugin.version}</version>
				<configuration>
					<!-- Integration Tests need a model home variable -->
					<systemPropertyVariables>
						<propertyName>model.home</propertyName>
						<integration.test.model>${integration.test.model}</integration.test.model>
						<model.home>${model.home}</model.home>
					</systemPropertyVariables>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>Download the integration test model if it doesn't exist</id>
						<phase>pre-integration-test</phase>
						<configuration>
							<target>
								<!-- Check if the system property is set -->
								<condition property="isModelHomeSet" value="true">
									<isset property="model.home"/>
								</condition>

								<!-- Fail the build if the property is not set -->
								<fail message="The 'model.home' system property is not set." unless="isModelHomeSet"/>
								<!-- Check if the directory exists -->
								<available file="${model.home}" type="dir" property="model.home.exists"/>

								<!-- Fail the build if the directory does not exist -->
								<fail message="Model home directory does not exist: ${model.home}" unless="model.home.exists"/>

								<!-- Define the file path using the system property -->
								<property name="modelPath" value="${model.home}${file.separator}${integration.test.model}"/>

								<!-- Check if the file exists -->
								<available file="${modelPath}" property="fileExists"/>

								<!-- Download the file if it doesn't exist -->
								<get src="${integration.test.model.url}" dest="${modelPath}" skipexisting="true"/>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
						<version>1.6.13</version>
						<extensions>true</extensions>
						<configuration>
							<serverId>ossrh</serverId>
							<nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
							<autoReleaseAfterClose>true</autoReleaseAfterClose>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<version>3.3.0</version>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar-no-fork</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>3.5.0</version>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>3.1.0</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>${test.plugin.version}</version>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>3.0.0</version>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
